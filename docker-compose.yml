name: WebsiteCloud
services:
  db:
    image: postgres:17
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - WebsiteCloudNet
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: ./backend/.env
    container_name: spring_boot_app
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_NAME: users_db
      DB_USER: postgres
      DB_PASSWORD: postgres
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - WebsiteCloudNet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - WebsiteCloudNet
    depends_on:
      - backend
    ports:
      - "3000:3000"

volumes:
  postgres_data:

networks:
  WebsiteCloudNet:
    driver: bridge